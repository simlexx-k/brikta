version: '3.8'

services:
  # Database
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: ingestion_db
      POSTGRES_HOST_AUTH_METHOD: trust  # Temporary for setup
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ingestion-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ingestion_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # S3-Compatible Storage
  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_CONSOLE_ADDRESS: ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - ingestion-net

  # Caching
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - ingestion-net

  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - ingestion-net

  # Data Ingestion Service
  ingestion:
    build: ./ingestion
    volumes:
      - ./backend/app:/app/backend/app  # Mount backend models
    env_file:
      - .env
    depends_on:
      - postgres
      - minio
      - backend
    networks:
      - ingestion-net
    environment:
      - PYTHONPATH=/app:/app/backend  # Add backend to Python path

  # Frontend UI
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_HMR_HOST=localhost
      - VITE_HMR_PORT=5173
      - VITE_API_URL=http://backend:8000
    command: npm run dev -- --host 0.0.0.0 --port 5173
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - ingestion-net

volumes:
  postgres_data:
  minio_data:

networks:
  ingestion-net:
    driver: bridge
    name: ingestion-net